# -*- coding: utf-8 -*-
"""Copy of Welcome to Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17InPZWnN8Avd5MxmyN5fyZdFMRlG7HSJ
"""

import tensorflow as tf

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

x_train

x_train.shape

import matplotlib.pyplot as plt

fig, axs = plt.subplots(4,4,figsize = (20,20))

plt.gray()

fig, axs = plt.subplots(4,4,figsize = (20,20))
plt.gray()
for i,ax in enumerate(axs.flat):
  ax.matshow(x_train[i])
  ax.axis('off')
  ax.set_title('Number {}'.format(y_train[i]))

fig.show()

x_train = x_train.reshape(x_train.shape[0],28,28,1)
x_test = x_test.reshape(x_test.shape[0],28,28,1)

input_shape = (28,28,1)

x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
x_train/= 255
x_test/= 255
print('x_train shape:', x_train.shape)
print('no.of images in x_train', x_train.shape[0])
print('no.of images in x_test', x_test.shape[0])

from tensorflow.python.ops.gen_math_ops import dense_bincount 
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv2D, Dropout, Flatten, MaxPooling2D

model = Sequential()
model.add(Conv2D(28, kernel_size=(3,3), input_shape = input_shape))
model.add(MaxPooling2D(pool_size= (2,2)))
model.add(Flatten())
model.add(Dense(128, activation=tf.nn.relu))
model.add(Dropout(0.2))
model.add(Dense(10, activation=tf.nn.softmax))

model.compile(optimizer='adam',loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy'])
model.fit(x=x_train, y=y_train, epochs=1)

model.evaluate(x_test, y_test)

